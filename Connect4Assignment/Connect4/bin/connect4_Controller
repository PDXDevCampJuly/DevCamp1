start_game()
/*
This is the main function that runs how whole game
*/




add_new_player(int)
/*
Prompt player for name and stores it in the players attribute that
corresponds to the arg, player 0 is assigned color "r", and player 1 is
assigned "b"
*/
1. test_add_new_player_zero
provide mock input with “George” for player 0 and check that the function updated player 0’s name



switch_player()
/*
This function switches the player’s turn
*/

1. test_switch_player()
Stored current active player. Check function causes the current active player to switch


check_connect_four():Bool
/*
Analyze the game_board and return True if a winning pattern is found, else
return False.
*/

1. test_connect_four_vertical_found
/*
Set up game_board that includes a column with four adjacent "r". Check that
the function returns True.
*/

2. test_connect_four_vertical_not_found
/*
Set up game_board that includes a column without four adjacent "r" or "b".
Check that the function returns False.
*/

3. test_connect_four_diagonal_found
/*
Set up game_board that includes four diagonally adjacent "r". Check that
the function returns True.
*/

4. test_connect_four_diagonal_not_found
/*
Set up game_board that does not include four diagonally
adjacent "r" or "b". Check that the function returns False.
*/

5. test_connect_four_horizontal_found
/*
Set up game_board that includes four horizontally adjacent "r".
Check that the function returns True.
*/

6. test_connect_four_horizontal_not_found
/*
Set up game_board that does not include four adjacent "r" or
"b". Check that the function returns False.
*/


check_draw(): Bool
/*
Checks the the get_token_count.  If the token count is 0, then return True, else return False
*/

1. test_check_draw(): Bool
Set token count to 0 and check to return True

2. test_check_draw_token_left()
Set token to 5 and check to return False

